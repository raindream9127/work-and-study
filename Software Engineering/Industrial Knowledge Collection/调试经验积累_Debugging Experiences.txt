*************************************************************************************************************
最重要的调试经验：尽一切可能优先将程序过程图形化或可视化，这会增加初期成本，但是对成功率和效率的提升至关重要！
*************************************************************************************************************

・C2413――IDE不报错但是编译器报错和未定义标识符
实际上编译器只编译源文件，且一般按照名称首字母顺序。在包含头文件的地方，将被包含头文件中的代码全部拷贝进去再进行解析。
因此头文件在实际程序中的出现是有顺序的，即头文件在源文件进行展开的顺序。可能IDE能够解析某个定义，但是编译器按照预定顺序编译时无法解析。
――适当调整包含头文件的顺序和位置，从编译器的角度保证其顺利“解析”。

・静态成员的初始化和new运算符的使用
现行的visual studio似乎无法在这种情况下使用new对数组进行aggregate initialization。
也许是因为处在所有函数范围之外无法像在函数内一样编译指令。
有待通过汇编实现等方法查证。

・LINK Error/unresolved external/obj. error/错误原因显示乱码
这一般是直接拷贝代码之后边整合代码边试图编译导致的目标文件链接错误。
编译器默认不会重新编译未修改的源文件，但是有时需要它这样做（具体细节应当属于编译链接器的内部）。
解决办法是在每次编译前删除所有已经编译的obj.，即clean project。

・error LNK2019: unresolved external symbol/函数模板的使用
出现这个错误的原因在于模板函数的申明与定义在不同文件中。
当编译器遇到一个模板定义时，它并不生成代码。这就是为什么没有调用这个函数模板时，代码可以运行成功。
因此，与非模板代码不同，模板的头文件通常要包括申明和定义。
